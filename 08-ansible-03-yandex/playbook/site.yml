---
- name: Installation NGINX
  hosts: lighthouse
  handlers:
    - name: Start-nginx
      become: true
      ansible.builtin.command: nginx
      register: nginx_start_output
      changed_when: nginx_start_output.rc != 0
    - name: reload-nginx
      become: true
      ansible.builtin.command: nginx -s reload
      register: nginx_reload_output
      changed_when: nginx_reload_output.rc != 0
  tasks:
    - name: Install nginx
      become: true
      ansible.builtin.yum:
        name: epel-release
        state: present
    - name: Install nginx
      become: true
      ansible.builtin.yum:
        name: nginx
        state: present
    - name: Start-nginx
      become: true
      ansible.builtin.service:
        name: nginx
        state: started
    - name: Creating config
      become: true
      ansible.builtin.template:
        src: templates/nginx.j2
        dest: /etc/nginx/nginx.conf
        mode: 0644
      notify: reload-nginx

- name: Install Lighthouse
  hosts: lighthouse
  handlers:
    - name: reload-nginx
      become: true
      command: nginx -s reload
  pre_tasks:
    - name: Lighthouse ----- Installing Git
      become: true
      ansible.builtin.yum:
        name: git
        state: present
  tasks:
    - name: Lighthouse ----- Downloading Lighthouse
      become: true
      git:
        repo: "{{ lighthouse_repo }}"
        version: master
        dest: "{{ lighthouse_location_dir }}"
    - name: Lighthouse ----- Creating lighthouse vector config
      become: true
      template:
        src: templates/lighthouse.j2
        dest: /etc/nginx/conf.d/default.conf
        mode: 0644
      notify: reload-nginx

- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
    - name: Start Vector service
      become: true
      ansible.builtin.service:
        name: vector
        state: restarted
  tasks:
    - block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            #url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
        disable_gpg_check: true
      notify: Start clickhouse service
    - name: Flush handlers
      meta: flush_handlers
    - name: Pause playbook for start clickhouse
      ansible.builtin.pause:
            seconds: 10
            echo: false
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0

- name: Install Vector
  hosts: vector
  handlers:
    - name: Start Vector service
      become: true
      ansible.builtin.service:
        name: vector
        state: restarted
  tasks:
    - name: Vector | Download packages
      ansible.builtin.get_url:
        url: "{{ vector_url }}"
        dest: "./vector-{{ vector_version }}-1.x86_64.rpm"
    - name: Vector | Install packages
      become: true
      ansible.builtin.yum:
        name: "./vector-{{ vector_version }}-1.x86_64.rpm"
        disable_gpg_check: true
    - name: Vector | Apply template
      become: true
      ansible.builtin.template:
        src: vector.yml.j2
        dest: "{{ vector_config_dir }}/vector.yml"
        mode: "0644"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        validate: vector validate --no-environment --config-yaml %s
    - name: Vector | change systemd unit
      become: true
      ansible.builtin.template:
        src: vector.service.j2
        dest: /usr/lib/systemd/system/vector.service
        mode: "0644"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        backup: true
      notify: Start Vector service

